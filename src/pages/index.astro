---
import Layout from "../layouts/Layout.astro";
import { useTranslations, defaultLanguage } from "../i18n/languages";
import mongoose from "mongoose";
import FilmografiaModel from "../lib/models/filmografia";
import { generateSlug, slugManager } from "../utils/slugManager.js";

type Filmografia = {
  _id: mongoose.Types.ObjectId;
  titulo: string;
  tituloEn?: string;
  tituloCat?: string;
  urlPoster?: string;
  sinopsis: string;
  sinopsisEn?: string;
  sinopsisCat?: string;
  fecha: number;
  genero?: string;
  generoEn?: string;
  generoCat?: string;
  director?: string;
  __v?: number;
};

// Obtener idioma actual
const lang = (Astro.locals as any)?.lang || defaultLanguage;
const t = useTranslations(lang);

// Función para obtener el título según el idioma
function getTitulo(item: Filmografia): string {
  if (lang === "en" && item.tituloEn) return item.tituloEn;
  if (lang === "ca" && item.tituloCat) return item.tituloCat;
  return item.titulo;
}

// Función para generar el slug de la película
function getFilmSlug(item: Filmografia): string {
  const baseSlug = generateSlug(getTitulo(item));
  return slugManager.registerSlug(baseSlug, item._id.toString());
}

// Conectar a MongoDB y obtener las últimas 3 producciones
let recentProductions: any[] = [];

try {
  // @ts-ignore - Ignoramos los errores de TypeScript ya que no lo estamos usando
  await mongoose.connect(import.meta.env.VITE_MONGO_URI);
  const results = await FilmografiaModel.find()
    .sort({ fecha: -1 })
    .limit(3)
    .lean();
  
  recentProductions = results;
} catch (error) {
  console.error('Error al obtener producciones:', error);
}
---

<Layout
  title={t("home") + " - Rodar y Rodar"}
  description="Rodar y Rodar - Productora cinematográfica"
>
  <!-- Hero Section -->
  <section class="py-20 relative bg-gray-900">
    <!-- Imagen de fondo con superposición -->
    <div class="absolute inset-0 overflow-hidden">
      <img 
        src="https://res.cloudinary.com/dxytyvnn2/image/upload/v1755791964/IMG_0054_tkknqf.png" 
        alt="Film background" 
        class="w-full h-full object-cover opacity-50"
      />
      <div class="absolute inset-0 bg-gradient-to-b from-black/70 to-gray-900/90"></div>
    </div>
    
    <div class="container mx-auto px-4 text-center relative z-10">
      <h1 class="text-5xl md:text-6xl font-bold mb-6 text-white">Rodar y Rodar</h1>
      <p class="text-xl md:text-2xl max-w-3xl mx-auto mb-10 text-gray-200">
        {t("hero_description")}
      </p>
      <div class="flex flex-wrap justify-center gap-4">
        <a
          href="/filmografias"
          class="px-6 py-3 bg-red-800 text-white font-medium rounded-lg hover:bg-red-900 transition shadow-md"
        >
          {t("see_filmography")}
        </a>
        <a
          href="/servicios"
          class="px-6 py-3 bg-white text-red-800 border border-white font-medium rounded-lg hover:bg-white/90 transition shadow-md"
        >
          {t("our_services")}
        </a>
      </div>
    </div>
  </section>

<!-- Sección dividida: Producciones y Servicios -->
<section class="py-16 bg-white dark:bg-gray-900">
  <div class="container mx-auto px-4">
    <div class="flex flex-col lg:flex-row gap-12">

      <!-- Producciones Recientes (Izquierda) -->
      <div class="lg:w-1/2 h-full flex flex-col">
        <h2 class="text-3xl font-bold mb-8 text-center lg:text-left">
          {t("recent_productions")}
        </h2>

        <div class="space-y-4 flex-grow">
          {recentProductions.map((film) => (
            <div class="bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden shadow-md hover:shadow-lg transition h-60 flex">
              <!-- Imagen -->
              <div class="w-1/4 min-h-60 flex-shrink-0 bg-transparent dark:bg-gray-700 flex items-center justify-center overflow-hidden  ">
                <img
                  src={film.urlPoster || "https://placehold.co/600x900"}
                  alt={getTitulo(film)}
                  class="h-full w-full object-contain aspect-[2/3] max-h-full max-w-full p-2"
                />
              </div>

              <!-- Detalles -->
              <div class="w-3/4 p-4 flex flex-col">
                <h3 class="text-xl font-semibold mb-2">{getTitulo(film)}</h3>
                <p class="text-gray-600 dark:text-gray-300 mb-1 text-sm">
                  {film.fecha} | {lang === 'en' ? film.generoEn || film.genero : lang === 'ca' ? film.generoCat || film.genero : film.genero}
                </p>
                <p class="text-gray-600 dark:text-gray-300 mb-2 text-sm">
                  {t("directed_by")}: {film.director}
                </p>
                <p class="text-gray-600 dark:text-gray-300 text-sm line-clamp-3 flex-grow">
                  {lang === 'en' ? film.sinopsisEn || film.sinopsis : lang === 'ca' ? film.sinopsisCat || film.sinopsis : film.sinopsis}
                </p>
                <a href={`/${getFilmSlug(film)}`} class="inline-block text-gray-300 hover:underline text-sm mt-2">
                  {t("view_details")} &rarr;
                </a>
              </div>
            </div>
          ))}
        </div>

        <div class="text-center lg:text-left mt-6">
          <a
            href="/filmografias"
            class="px-6 py-2 bg-red-800 text-white font-medium rounded-lg hover:bg-red-900 transition text-sm shadow-md"
          >
            {t("view_all_filmography")}
          </a>
        </div>
      </div>

      <!-- Nuestros Servicios (Derecha) -->
      <div class="lg:w-1/2 h-full flex flex-col ">
        <h2 class="text-3xl font-bold mb-8 text-center lg:text-left">
          {t("our_services")}
        </h2>

        <div class="grid grid-cols-1 gap-4 flex-grow">
          {[
            { icon: "camera", title: t("film_production"), desc: t("film_production_desc") },
            { icon: "sound", title: t("post_production"), desc: t("post_production_desc") },
            { icon: "globe", title: t("distribution"), desc: t("distribution_desc") }
          ].map((service) => (
            <div class="p-5 bg-white dark:bg-gray-700 rounded-lg shadow-md hover:shadow-lg transition min-h-60 flex flex-col">
              <div class="text-gray-300 mb-3 flex justify-center lg:justify-start">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  {service.icon === "camera" && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                  )}
                  {service.icon === "sound" && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z" />
                  )}
                  {service.icon === "globe" && (
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                  )}
                </svg>
              </div>
              <h3 class="text-lg font-semibold mb-2 text-center lg:text-left">{service.title}</h3>
              <p class="text-gray-600 dark:text-gray-300 text-sm text-center lg:text-left flex-grow">
                {service.desc}
              </p>
            </div>
          ))}
        </div>

        <div class="text-center lg:text-left mt-6 self-start">
          <a
            href="/servicios"
            class="px-6 py-2 bg-red-800 text-white font-medium rounded-lg hover:bg-red-900 transition shadow-md text-sm"
          >
            {t("more_about_our_services")}
          </a>
        </div>
      </div>
    </div>
  </div>
</section>
</Layout>