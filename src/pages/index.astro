---
import Layout from "../layouts/Layout.astro";
import FichaModal from "../components/FichaModal.astro";

// Idioma
import { useTranslations, defaultLanguage } from "../i18n/languages";
const lang = (Astro.locals as any)?.lang || defaultLanguage;
const t = useTranslations(lang);

// Base de datos
import dbConnect from "../lib/mongoose";
import FilmografiaModel from "../lib/models/filmografia";

// Obtener todas las películas
let filmografia: any[] = [];
try {
  await dbConnect();
  const films = await FilmografiaModel.find({}).sort({ fecha: -1 });
  const plainFilms = JSON.parse(JSON.stringify(films)); // Limpia Mongoose

  // Remodelar los datos para agrupar los campos multilingües
  filmografia = plainFilms.map(film => ({
    ...film,
    titulo: {
      es: film.titulo,
      en: film.tituloEn,
      ca: film.tituloCat
    },
    sinopsis: {
      es: film.sinopsis,
      en: film.sinopsisEn,
      ca: film.sinopsisCat
    },
    genero: {
      es: film.genero,
      en: film.generoEn,
      ca: film.generoCat
    }
  }));

} catch (e) {
  console.error("Error al cargar filmografía:", e);
  filmografia = [];
}

// Estado: película seleccionada a partir de la URL
const filmId = Astro.url.searchParams.get("film");
const selectedFilm = filmId ? filmografia.find(f => f._id.toString() === filmId) : null;
---

<Layout
  title={t("home") + " - Rodar y Rodar"}
  description="Rodar y Rodar - Productora cinematográfica"
>
  <!-- Hero Section -->
  <section class="py-20 relative bg-gray-900">
    <div class="absolute inset-0 overflow-hidden">
      <img
        src="https://res.cloudinary.com/dxytyvnn2/image/upload/v1755791964/IMG_0054_tkknqf.png"
        alt="Film background"
        class="w-full h-full object-cover opacity-50"
      />
      <div class="absolute inset-0 bg-gradient-to-b from-black/70 to-gray-900/90"></div>
    </div>

    <div class="container mx-auto px-4 text-center relative z-10">
      <h1 class="text-5xl md:text-6xl font-bold mb-6 text-white">
        Rodar y Rodar Cine
      </h1>

      <!-- Carrusel de Posters -->
      <div id="poster-carousel" class="overflow-hidden w-full mt-8">
        <div class="flex animate-scroll gap-6">
          {filmografia.map((film) => (
            <div
              class="flex-shrink-0 w-44 md:w-56 lg:w-40 rounded-lg shadow-2xl overflow-hidden hover:scale-105 transition-transform duration-300 cursor-pointer"
              data-id={film._id}
            >
              <img src={film.urlPoster} alt={film.titulo.es || 'Film Poster'} class="w-full h-full object-cover" loading="lazy" />
            </div>
          ))}
          <!-- Duplicados para scroll infinito -->
          {filmografia.map((film) => (
            <div
              class="flex-shrink-0 w-44 md:w-56 lg:w-40 rounded-lg shadow-2xl overflow-hidden hover:scale-105 transition-transform duration-300 cursor-pointer"
              data-id={film._id}
            >
              <img src={film.urlPoster} alt={film.titulo.es || 'Film Poster'} class="w-full h-full object-cover" loading="lazy" />
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>

  <section class="bg-gray-50 dark:bg-gray-950 py-14 md:py-20 border-t border-gray-200 dark:border-gray-700">
    <div class="container mx-auto px-4">
      <h2 class="text-2xl text-gray-900 dark:text-white md:text-3xl font-semibold mb-10 text-center">
        {t("collaboration_with")}
      </h2>

      <div class="flex flex-col md:flex-row items-center justify-center gap-10 md:gap-16">
        <a href="https://icec.gencat.cat" target="_blank" rel="noopener noreferrer" class="relative p-4 mb-4 md:mb-0 flex items-center justify-center" aria-label={t("icec_label")}>
          <img src="https://res.cloudinary.com/dxytyvnn2/image/upload/v1758906188/icec_logo_y3ba8v.png" alt={t("icec_label")} class="max-h-10 w-auto object-contain dark:brightness-[1.05]" />
        </a>

        <a href="https://cultura.gencat.cat" target="_blank" rel="noopener noreferrer" class="relative p-4 mb-4 md:mb-0 flex items-center justify-center" aria-label={t("gencat_label")}>
          <img src="https://res.cloudinary.com/dxytyvnn2/image/upload/v1758906188/gencat_beu0ew.png" alt={t("gencat_label")} class="max-h-10 w-auto object-contain dark:brightness-[1.05]" />
        </a>

        <a href="https://catalanfilms.cat/ca/qui-som" target="_blank" rel="noopener noreferrer" class="relative p-4 flex items-center justify-center" aria-label="Catalan Films">
          <img src="https://res.cloudinary.com/dxytyvnn2/image/upload/v1758904096/1610661171-cf-color_cvvfh9.png" alt="Catalan Films" class="max-h-26 w-auto object-contain dark:brightness-[1.05]" />
        </a>
      </div>
    </div>
  </section>

  <!-- 
    Modal de Ficha: Se renderiza en el servidor solo si `selectedFilm` tiene datos.
    Ya no necesita el prop `onClose` porque el nuevo componente FichaModal 
    despacha un evento `close` que el script de abajo escuchará.
  -->
  {selectedFilm && (
    <FichaModal
      film={selectedFilm}
      lang={lang}
    />
  )}
</Layout>

<script>
  // Script para abrir el modal: Añade un parámetro de búsqueda a la URL y recarga la página.
  document.querySelectorAll('[data-id]').forEach(el => {
    el.addEventListener('click', () => {
      const id = el.getAttribute('data-id');
      if (id) {
        const url = new URL(window.location.href);
        url.searchParams.set('film', id);
        // Navega a la nueva URL, lo que hará que el servidor renderice el modal.
        window.location.href = url.toString();
      }
    });
  });

  // Script para cerrar el modal: Escucha el evento 'close' que ahora despacha FichaModal.
  const modal = document.querySelector('div[role="dialog"]');
  if (modal) {
    modal.addEventListener('close', () => {
      const url = new URL(window.location.href);
      url.searchParams.delete('film');
      // Navega a la URL sin el parámetro, lo que oculta el modal en el servidor.
      window.location.href = url.toString();
    });
  }
</script>

<!-- <style is:global>
  @keyframes scroll {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
  }
  .animate-scroll {
    display: flex;
    width: max-content;
    animation: scroll 60s linear infinite;
  }
  .animate-scroll:hover {
    animation-play-state: paused;
  }
</style> -->